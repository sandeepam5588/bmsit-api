# Database Config - mysql
 spring.datasource.url=jdbc:mysql://localhost:3306/bmsit_api_db
 spring.datasource.username=root
 spring.datasource.password=sandeep@5588

# Database config heroku-postgres
#spring.datasource.url=jdbc:postgresql://ec2-44-196-174-238.compute-1.amazonaws.com:5432/d8d04vvf5t08np
#spring.datasource.username=pkwujbygzuqybo
#spring.datasource.password=6ee0c3ccb9b7fcaa3db319badb752673ada5f4e6cc4c0c24a74653f276621a31
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.maxActive=2
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
 spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate Configuration
 spring.jpa.hibernate.ddl-auto=create
 spring.jpa.show-sql=true

# This will ensure, that after Hibernate schema creation is performed then additionally schema.sql is read
# for any additional schema changes and data.sql is executed to populate the database.
# spring.jpa.defer-datasource-initialization=true
#
# spring.sql.init.mode=always
# spring.jpa.generate-ddl=false
# spring.datasource.schema=classpath:/schema.sql
# spring.datasource.data=classpath:/data.sql


# Color-coded log output
 spring.output.ansi.enabled=always
 java.runtime.version=17.0.3

# spring AOP
 spring.main.banner-mode=off

